// stats.js - http://github.com/mrdoob/stats.js
var globalFPS= null;
var Stats = function () {


  var g = (performance || Date).now(),
    e = g,
    a = 0,
    r =new Stats.Panel("FPS", "#f9f9f9", "grey"),
    f = new Stats.Panel("MS", "#0f0", "#020");
  if (self.performance && self.performance.memory)
    var t = new Stats.Panel("MB", "#f08", "#201");

  return {
    REVISION: 16,

    begin: function () {
      g = (performance || Date).now();
    },
    end: function () {
      a++;
      var c = (performance || Date).now();
      f.update(c - g, 200);
      if (
        c > e + 1e3 &&
        (r.update((1e3 * a) / (c - e), 100), (e = c), (a = 0), t)
      ) {
        var d = performance.memory;
        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);
      }
      return c;
    },
    update: function () {
      g = this.end();
    }

  };
};
Stats.Panel = function (h, k, l) {

    f = 48 * Math.round(window.devicePixelRatio || 1);
  return {
    update: function (f, v) {

      globalFPS = Math.round(f);
      if(h == "FPS")
        $(".modelStats").text(Math.round(f)+" fps" );

    }
  };
};
"object" === typeof module && (module.exports = Stats);
